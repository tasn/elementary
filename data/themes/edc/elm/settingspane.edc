group { name: "elm/settingspane/base/default";
   images.image: "shadow_vert.png" COMP;
   images.image: "bevel_out.png" COMP;
   images.image: "vgrad_med.png" COMP;
   images.image: "back.png" COMP;
   images.image: "horiz_bar_inset.png" COMP;
   parts {
       part { name: "elm.swallow.panel"; type: SWALLOW;
          description { state: "default" 0.0;
             align: 0 0;
             rel1.to_y: "title_base";
             rel1.to_x: "elm.swallow.menu";
             rel1.relative: 1.0 1.0;
          }
       }
       part { name: "elm.swallow.menu"; type: SWALLOW;
          description { state: "default" 0.0;
             align: 0 0;
             rel1.to_y: "title_base";
             rel1.relative: 0.0 1.0;
             rel2.relative: 0.0 1.0;
             rel2.offset: 150 0;
          }
          description { state: "searchmode" 0.0;
             inherit: "default" 0.0;
             rel2.offset: 0 0;
          }
       }
       part { name: "shadow"; mouse_events: 0;
          description { state: "default" 0.0;
             image.normal: "shadow_vert.png";
             rel1.to: "title_base";
             rel1.relative: 0.0 1.0;
             rel2.to: "title_base";
             rel2.offset: -1 40;
             align: 0.5 0.0;
          }
          description { state: "visible" 0.0;
             inherit: "default" 0.0;
             rel2.offset: 40 -1;
          }
       }
       part { name: "title_base";
          description { state: "default" 0.0;
             image.normal: "vgrad_med.png";
             fill.smooth: 0;
             TILED_HORIZ(120)
             rel2.relative: 1.0 1.0;
             rel2.to_y: "elm.swallow.search";
             rel2.offset: -1 4;
          }
       }
       part { name: "bevel"; mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "title_base";
             rel2.to: "title_base";
             image.normal: "bevel_out.png";
             image.border: 1 1 1 1;
             image.middle: 0;
             fill.smooth: 0;
             min: 5 5;
          }
       }
       part { name: "elm.swallow.search"; type: SWALLOW;
          description { state: "default" 0.0;
             rel1.relative: 1.0 0.0;
             rel1.offset: -5 4;
             rel2.to_x: "unsaved_changes";
             rel2.relative: 0.0 0.0;
             rel2.offset: -5 4;
             align: 1.0 0.0;
             min: 120 4;
             fixed: 1 1;
          }
       }
       part { name: "unsaved_changes"; scale: 1; type: IMAGE;
          description { state: "default" 0.0;
            aspect: 1.0 1.0; aspect_preference: VERTICAL;
            rel1.to_y: "elm.swallow.search";
            rel2.to_y: "elm.swallow.search";
            rel1.relative: 1.0 0.0;
            rel2.relative: 1.0 1.0;
            rel2.offset: -5 0;
            color: 50 50 50 50;
            align: 1.0 0.5;
            image.normal: "icon_warning.png";
          }
          description { state: "enabled" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255;
          }
       }
       part { name: "elm.swallow.title"; type: SWALLOW;
          description { state: "default" 0.0;
             align: 1.0 0.5;
             rel1.to_x: "back";
             rel1.to_y: "title_base";
             rel1.relative: 1.0 0.0;
             rel2.to_x: "elm.swallow.search";
             rel2.to_y: "title_base";
             rel2.relative: 0.0 1.0;
             fixed: 0 1;
          }
       }
       part { name: "elm.swallow.options"; type: SWALLOW;
          description { state: "default" 0.0;
             align: 1.0 0.5;
             rel1.to_x: "elm.swallow.search";
             rel1.to_y: "title_base";
             rel1.relative: 1.0 0.0;
             rel2.to_x: "elm.swallow.search";
             rel2.to_y: "title_base";
             rel2.relative: 0.0 1.0;
             fixed: 1 1;
          }
       }
       part { name: "back"; type: RECT; scale: 1;
          description { state: "default" 0.0;
             aspect: 1.0 1.0; aspect_preference: VERTICAL;
             rel1.to: "title_base";
             rel2.to: "title_base";
             rel2.relative: 0.0 1.0;
             rel2.offset: 0 -1;
             align: 0.0 0.5;
             color: 0 0 0 0;
             min: 17 17;
          }
          description { state: "disabled" 0.0;
             inherit: "default" 0.0;
             visible: 0;
          }
       }
       part { name: "backarrow"; mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "back";
             rel2.to: "back";
             image.normal: "back.png";
             min: 14 17;
             max: 14 17;
          }
          description { state: "disabled" 0.0;
             inherit: "default" 0.0;
             color: 255 255 255 64;
          }
       }
   }
   programs {
       program {
          signal: "mouse,clicked,1"; source: "back";
          action: SIGNAL_EMIT "elm,action,back" "elm";
       }
       program {
          signal: "mouse,clicked,3"; source: "back";
          action: SIGNAL_EMIT "elm,action,back_menu" "elm";
       }
       program {
          signal: "mouse,clicked,*"; source: "unsaved_changes";
          action: SIGNAL_EMIT "elm,unsaved,clicked" "elm";
       }
       program {
          signal: "elm,state,unsaved,enabled"; source: "elm";
          action: "STATE_SET" "enabled";
          target: "unsaved_changes";
       }
       program {
          signal: "elm,state,unsaved,disabled"; source: "elm";
          action: "STATE_SET" "default";
          target: "unsaved_changes";
       }
       program {
          signal: "elm,state,back,disabled"; source: "elm";
          action: STATE_SET "disabled" 0.0;
          target: "back";
          target: "backarrow";
       }
       program {
          signal: "elm,state,back,enabled"; source: "elm";
          action: STATE_SET "default" 0.0;
          target: "back";
          target: "backarrow";
       }
       program {
          signal: "elm,searchmode,enable"; source: "elm";
          action: STATE_SET "searchmode" 0.0;
          target: "elm.swallow.menu";
       }
       program {
          signal: "elm,searchmode,disable"; source: "elm";
          action: STATE_SET "default" 0.0;
          target: "elm.swallow.menu";
       }
    }
 }
 group { name: "elm/settingspane/panel/default";
    images.image: "bevel_out.png" COMP;
    parts {
       part { name: "base"; type: RECT;
          description { state: "default" 0.0;
             color: 64 64 64 255;
             rel1.relative: -1.0 0.0;
             rel2.relative: 0.0 1.0;
          }
          description { state: "visible" 0.0;
             inherit: "default" 0.0;
             rel1.relative: 0.0 0.0;
             rel2.relative: 1.0 1.0;
          }
       }
       part { name: "base_clipper"; type:RECT;
          description { state: "default" 0.0;
             rel1.to: "base";
             rel2.to: "base";
          }
       }
       part { name: "error"; type: RECT;
          description { state: "default" 0.0;
             color: 255 255 255 0;
             visible: 0;
          }
          description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 75;
            visible: 1;
          }
       }
       part { name: "bevel"; mouse_events: 0;
          description { state: "default" 0.0;
             rel1.to: "base";
             rel1.offset: 0 -1;
             rel2.to: "base";
             image.normal: "bevel_out.png";
             image.border: 1 1 1 1;
             image.middle: 0;
             fill.smooth: 0;
             min: 5 5;
          }
       }
       part { name: "elm.rect.pad"; type: SWALLOW;
          description { state: "default" 0.0;
             align: 0.0 0.5;
             rel1.to: "base";
             rel2.to: "base";
             rel2.relative: 0.0 1.0;
             fixed: 1 0;
          }
       }
       part { name: "elm.swallow.content"; type: SWALLOW;
          description { state: "default" 0.0;
             rel1.to: "elm.rect.pad";
             rel1.relative: 1.0 0.0;
             rel2.to_x: "base";
             rel2.to_y: "elm.swallow.controls";
             rel2.relative: 1.0 0.0;
          }
       }
       part { name: "elm.swallow.controls"; type: SWALLOW;
         clip_to: "base_clipper";
         description { state: "default" 0.0;
             rel1.to: "base";
             rel1.relative: 0.0 1.0;
             rel2.to: "base";
             rel2.offset: 0 40;
         }
         description { state: "visible" 0.0;
             inherit: "default" 0.0;
             rel1.offset: 0 -40;
             rel2.offset: 0 0;
         }
       }
   }
   programs {
       program {
          signal: "elm,state,controls,enable"; source: "elm";
          action: STATE_SET "visible" 0.0;
          transition: LINEAR 0.3;
          target: "elm.swallow.controls";
       }
       program {
          signal: "elm,state,controls,disable"; source: "elm";
          action: STATE_SET "default" 0.0;
          transition: LINEAR 0.3;
          target: "elm.swallow.controls";
       }
       program {
          signal: "elm,state,visible"; source: "elm";
          action: STATE_SET "visible" 0.0;
          transition: DECELERATE 0.6;
          target: "base";
       }
       program {
          signal: "elm,state,default"; source: "elm";
          action: STATE_SET "default" 0.0;
          transition: DECELERATE 0.8;
          after: "trans_done";
          target: "base";
       }
       program {
          name: "trans_done";
          action: SIGNAL_EMIT "elm,state,default,reached" "elm";
          target: "";
       }
    }
 }
 group { name: "elm/settingspane/menu/default";
    images.image: "bevel_out.png" COMP;
    parts {
       part { name: "base"; type: RECT;
          description { state: "default" 0.0;
             rel1.to: "elm.swallow.content";
             rel2.to: "elm.swallow.content";
             rel2.offset: -1 -1;
             color: 64 64 64 255;
          }
       }
       part { name: "elm.swallow.content"; type: SWALLOW;
          description { state: "default" 0.0;
             rel1.offset: 0 0;
             rel2.offset: -1 -1;
             rel2.relative: 1.0 1.0;
             align: 0.0 0.0;
          }
          /* part gets this state when there is hidden */
          /* otherwise it will overlap the hidden part */
          description { state: "visible_hidden" 0.0;
             inherit: "default" 0.0;
             rel1.offset: 15 0;
             rel2.offset: 0 -1;
             align: 1.0 0.0;
          }
          /* just a tiny bit on the left side from the old list */
          description { state: "hidden" 0.0;
             inherit: "default" 0.0;
             rel1.offset: -135 0;
             rel2.offset: 15 -1;
             rel2.relative: 0.0 1.0;
             align: 1.0 0.0;
          }
       }
       part { name: "bevel"; mouse_events: 0;
          description { state: "default" 0.0;
             fixed: 1 1;
             rel1.to: "base";
             rel1.offset: 0 -1;
             rel2.to: "base";
             image.normal: "bevel_out.png";
             image.border: 1 1 1 1;
             image.middle: 0;
             fill.smooth: 0;
             min: 5 5;
          }
       }
       part { name: "back_cover"; type: RECT;
          description { state: "default" 0.0;
             color: 0 0 0 0;
             rel1.to: "base";
             rel2.to: "base";
             visible: 0;
          }
          description { state: "hidden" 0.0;
             inherit: "default" 0.0;
             visible: 1;
          }
       }
    }
   programs {
       program {
          signal: "elm,state,visible"; source: "elm";
          action: STATE_SET "default" 0.0;
          transition: DECELERATE 0.4;
          target: "elm.swallow.content";
          target: "back_cover";
       }
       program {
          signal: "elm,state,visible,hidden"; source: "elm";
          action: STATE_SET "visible_hidden" 0.0;
          transition: DECELERATE 0.4;
          target: "elm.swallow.content";
          target: "back_cover";
       }
       program {
          signal: "elm,state,hidden"; source: "elm";
          action: STATE_SET "hidden" 0.0;
          transition: DECELERATE 0.5;
          target: "elm.swallow.content";
          target: "back_cover";
       }
       program {
          signal: "mouse,clicked,1"; source: "back_cover";
          action: SIGNAL_EMIT "action,back" "conf";
       }
    }
 }
