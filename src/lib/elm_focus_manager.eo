interface Elm.Focus_Manager {
    [[A focusable Object should register itself to the next available Focus_Manager.

     The next Focus_Manager which is found up in the widget tree is used.

     Container widgets can also implement this interface to set there own right left top bottom objects, they just have to redirect the call up the widget tree so the next focus_manager registers the object]]
    methods {
        register {
            [[register a focusable object to a focusmanager.

              If the given direction objects is $null the manager should try on its own to evaluate this direction.

              if the given object is already regsitered the childs will be updated.
            ]]
            params {
                object : Elm.Focus*; [[object to add to the graph]]
                right : Elm.Focus*; [[Next focusable object for direction right]]
                left : Elm.Focus*; [[Next focusable object for direction left]]
                top : Elm.Focus*;  [[Next focusable object for direction top]]
                bottom : Elm.Focus*;  [[Next focusable object for direction bottom]]
                back : Elm.Focus*;  [[Next focusable object for tab presses]]
                forth : Elm.Focus*;  [[Next focusable object for forth presses]]
            }
        }
        register_simple {
            [[registers a focusable object to this Focus_Manager without any presetted direction objects.]]
            params {
                object : Elm.Focus*;
            }
        }
        unregister {
            [[unregister a before registered widget]]
            params {
                object : Elm.Focus*;
            }
        }
    }
}